apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: namespace
    app.kubernetes.io/instance: system
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: chunk-func-controller
    app.kubernetes.io/part-of: chunk-func-controller
    app.kubernetes.io/managed-by: kustomize
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: deployment
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: chunk-func-controller
    app.kubernetes.io/part-of: chunk-func-controller
    app.kubernetes.io/managed-by: kustomize
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      # TODO(user): Uncomment the following code to configure the nodeAffinity expression
      # according to the platforms which are supported by your solution.
      # It is considered best practice to support multiple architectures. You can
      # build your manager image using the makefile target docker-buildx.
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #         - matchExpressions:
      #           - key: kubernetes.io/arch
      #             operator: In
      #             values:
      #               - amd64
      #               - arm64
      #               - ppc64le
      #               - s390x
      #           - key: kubernetes.io/os
      #             operator: In
      #             values:
      #               - linux
      securityContext:
        runAsNonRoot: true
        # For common cases that do not require escalating privileges
        # it is recommended to ensure that all your Pods/Containers are restrictive.
        # More info: https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted
        seccompProfile:
          type: RuntimeDefault
      containers:
      - command:
        - /manager
        args:
        - --leader-elect
        image: controller:latest
        name: manager
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - "ALL"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 10m
            memory: 64Mi
        env:
          # RESOURCE_PROFILES can be either "AWS" or "GCF"
          - name: RESOURCE_PROFILES
            value: AWS
          # FUNCTION_TRIGGER can be either "REST" or "MockedResults"
          - name: FUNCTION_TRIGGER
            value: REST
          # PROFILER can be either "Exhaustive" or "BayesianOpt"
          - name: PROFILER
            value: Exhaustive
          # The number of profiling iterations that should be done for each resource profile and input size combination/configuration.
          - name: ITERATIONS_PER_CONFIGURATION
            value: '5'
          # The number resource profiles that should be evaluated concurrently.
          - name: CONCURRENT_PROFILES
            value: '2'

          # The address of the BO server.
          - name: BAYESIAN_OPT_SERVER
            value: localhost:9000
          # The minimum number of samples that will be collected by BO, as a percentage of the total number of profiles.
          # Having a minimum number of samples helps improve the quality of the model if the POI is already very low after the initial samples.
          - name: BAYESIAN_OPT_MIN_SAMPLES_PERCENT
            value: '0.1'
          # The maximum number of samples that will be collected by BO, as a percentage of the total number of profiles.
          - name: BAYESIAN_OPT_MAX_SAMPLES_PERCENT
            value: '0.4'
          # The xi hyperparameter for BO.
          - name: BAYESIAN_OPT_XI
            value: '0.01'
          # If the BO returns a probability of improvement below this threshold, profiling for the respective input size is marked as complete.
          - name: BAYESIAN_OPT_POI_THRESHOLD
            value: '0.02'

      - name: bayesian-optimizer
        image: bayesian-optimizer:latest
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
        ports:
          - containerPort: 9000

      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
