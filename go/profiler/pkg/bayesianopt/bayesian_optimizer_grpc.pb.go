// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.25.2
// source: pkg/bayesianopt/bayesian_optimizer.proto

package bayesianopt

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	BayesianOptimizerService_CreateBoModel_FullMethodName   = "/bayesianopt.BayesianOptimizerService/CreateBoModel"
	BayesianOptimizerService_GetBoSuggestion_FullMethodName = "/bayesianopt.BayesianOptimizerService/GetBoSuggestion"
	BayesianOptimizerService_DeleteBoModel_FullMethodName   = "/bayesianopt.BayesianOptimizerService/DeleteBoModel"
)

// BayesianOptimizerServiceClient is the client API for BayesianOptimizerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BayesianOptimizerServiceClient interface {
	// Creates a new BO model and returns its ID.
	CreateBoModel(ctx context.Context, in *BoModelInitData, opts ...grpc.CallOption) (*BoModelId, error)
	// Requests a suggestion for the next X value to explore, optionally supplying an observation from the previous profiling run.
	GetBoSuggestion(ctx context.Context, in *GetBoSuggestionRequest, opts ...grpc.CallOption) (*GetBoSuggestionResponse, error)
	// Delete the specified model.
	DeleteBoModel(ctx context.Context, in *BoModelId, opts ...grpc.CallOption) (*BoModelId, error)
}

type bayesianOptimizerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBayesianOptimizerServiceClient(cc grpc.ClientConnInterface) BayesianOptimizerServiceClient {
	return &bayesianOptimizerServiceClient{cc}
}

func (c *bayesianOptimizerServiceClient) CreateBoModel(ctx context.Context, in *BoModelInitData, opts ...grpc.CallOption) (*BoModelId, error) {
	out := new(BoModelId)
	err := c.cc.Invoke(ctx, BayesianOptimizerService_CreateBoModel_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bayesianOptimizerServiceClient) GetBoSuggestion(ctx context.Context, in *GetBoSuggestionRequest, opts ...grpc.CallOption) (*GetBoSuggestionResponse, error) {
	out := new(GetBoSuggestionResponse)
	err := c.cc.Invoke(ctx, BayesianOptimizerService_GetBoSuggestion_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bayesianOptimizerServiceClient) DeleteBoModel(ctx context.Context, in *BoModelId, opts ...grpc.CallOption) (*BoModelId, error) {
	out := new(BoModelId)
	err := c.cc.Invoke(ctx, BayesianOptimizerService_DeleteBoModel_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BayesianOptimizerServiceServer is the server API for BayesianOptimizerService service.
// All implementations must embed UnimplementedBayesianOptimizerServiceServer
// for forward compatibility
type BayesianOptimizerServiceServer interface {
	// Creates a new BO model and returns its ID.
	CreateBoModel(context.Context, *BoModelInitData) (*BoModelId, error)
	// Requests a suggestion for the next X value to explore, optionally supplying an observation from the previous profiling run.
	GetBoSuggestion(context.Context, *GetBoSuggestionRequest) (*GetBoSuggestionResponse, error)
	// Delete the specified model.
	DeleteBoModel(context.Context, *BoModelId) (*BoModelId, error)
	mustEmbedUnimplementedBayesianOptimizerServiceServer()
}

// UnimplementedBayesianOptimizerServiceServer must be embedded to have forward compatible implementations.
type UnimplementedBayesianOptimizerServiceServer struct {
}

func (UnimplementedBayesianOptimizerServiceServer) CreateBoModel(context.Context, *BoModelInitData) (*BoModelId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBoModel not implemented")
}
func (UnimplementedBayesianOptimizerServiceServer) GetBoSuggestion(context.Context, *GetBoSuggestionRequest) (*GetBoSuggestionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBoSuggestion not implemented")
}
func (UnimplementedBayesianOptimizerServiceServer) DeleteBoModel(context.Context, *BoModelId) (*BoModelId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBoModel not implemented")
}
func (UnimplementedBayesianOptimizerServiceServer) mustEmbedUnimplementedBayesianOptimizerServiceServer() {
}

// UnsafeBayesianOptimizerServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BayesianOptimizerServiceServer will
// result in compilation errors.
type UnsafeBayesianOptimizerServiceServer interface {
	mustEmbedUnimplementedBayesianOptimizerServiceServer()
}

func RegisterBayesianOptimizerServiceServer(s grpc.ServiceRegistrar, srv BayesianOptimizerServiceServer) {
	s.RegisterService(&BayesianOptimizerService_ServiceDesc, srv)
}

func _BayesianOptimizerService_CreateBoModel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BoModelInitData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BayesianOptimizerServiceServer).CreateBoModel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BayesianOptimizerService_CreateBoModel_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BayesianOptimizerServiceServer).CreateBoModel(ctx, req.(*BoModelInitData))
	}
	return interceptor(ctx, in, info, handler)
}

func _BayesianOptimizerService_GetBoSuggestion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBoSuggestionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BayesianOptimizerServiceServer).GetBoSuggestion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BayesianOptimizerService_GetBoSuggestion_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BayesianOptimizerServiceServer).GetBoSuggestion(ctx, req.(*GetBoSuggestionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BayesianOptimizerService_DeleteBoModel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BoModelId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BayesianOptimizerServiceServer).DeleteBoModel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BayesianOptimizerService_DeleteBoModel_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BayesianOptimizerServiceServer).DeleteBoModel(ctx, req.(*BoModelId))
	}
	return interceptor(ctx, in, info, handler)
}

// BayesianOptimizerService_ServiceDesc is the grpc.ServiceDesc for BayesianOptimizerService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BayesianOptimizerService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "bayesianopt.BayesianOptimizerService",
	HandlerType: (*BayesianOptimizerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateBoModel",
			Handler:    _BayesianOptimizerService_CreateBoModel_Handler,
		},
		{
			MethodName: "GetBoSuggestion",
			Handler:    _BayesianOptimizerService_GetBoSuggestion_Handler,
		},
		{
			MethodName: "DeleteBoModel",
			Handler:    _BayesianOptimizerService_DeleteBoModel_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/bayesianopt/bayesian_optimizer.proto",
}
